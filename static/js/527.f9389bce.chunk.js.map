{"version":3,"file":"static/js/527.f9389bce.chunk.js","mappings":"kLAMIA,EAAY,IAAIC,QACpBD,EAAUE,OAAO,SAAU,oCAE3B,IAAIC,EAAiB,CACnBC,OAAQ,MACRC,SAAU,SACVC,QAASN,G,kBCVX,ECCa,WACX,OAA8BO,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OACE,iBAAKC,UAAU,cAAf,WACE,kBAAMC,SApBW,SAAAC,GACnBA,EAAEC,iBACF,IFM2BC,EAAQC,EAAMC,EENnCC,EAAOL,EAAEM,OAAOC,SAASC,SAASC,MAAMC,MAAM,KAOpDC,QAAQC,IAAIP,GACZV,GAAW,IFFgBO,EEGZG,EAAK,GFHeF,EEGXE,EAAK,GFHYD,EEGRC,EAAK,GFFjCQ,MAAM,0DAAD,OACgDT,EADhD,iBAC2DD,EAD3D,mBAC0ED,GACpFb,GACAyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,KEAVF,MAAK,SAAAlB,GAAM,OAAIC,EAAUD,EAAd,IACXqB,OAAM,SAAAC,GAAK,OAAIP,QAAQC,IAAIM,EAAhB,IACXC,SAAQ,kBAAMxB,GAAW,EAAjB,IAEXgB,QAAQC,IAAIhB,EACb,EAGG,WACE,4BACE,kBAEEwB,QAAQ,yCACRC,KAAK,OACLC,KAAK,gBAGT,mBAAQC,SAAU7B,EAAS2B,KAAK,SAAhC,SACG3B,EAAU,aAAe,eAG9B,wBACE,uBAAIE,EAAOA,aAIlB,C","sources":["components/api/api.js","components/Home/index.js","components/Home/Home.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// const instance = axios.create({\n//   baseURL: 'https://api.exchangeratesapi.io/v1/',\n// });\n\nvar myHeaders = new Headers();\nmyHeaders.append('apikey', 'Bqf0jgud3HsN3E435u3LbG7qgqDyjvOj');\n\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders,\n};\n\nexport const changeCurrency = (amount, from, to) => {\n  return fetch(\n    `https://api.apilayer.com/exchangerates_data/convert?to=${to}&from=${from}&amount=${amount}`,\n    requestOptions\n  ).then(response => response.json());\n};\n","import Home from './Home';\n\nexport default Home;\n","import { changeCurrency } from 'components/api/api';\nimport { useState } from 'react';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(false);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const data = e.target.elements.currency.value.split(' ');\n    // const inputValue = e.target.elements.currency.value;\n\n    // const regex = /^(\\d+(\\.\\d+)?)\\s+(\\w+)\\s+in\\s+(\\w+)$/;\n    // const matches = inputValue.match(regex);\n    // console.log(matches);\n\n    console.log(data);\n    setLoading(true);\n    changeCurrency(data[0], data[1], data[3])\n      .then(result => setResult(result))\n      .catch(error => console.log(error))\n      .finally(() => setLoading(false));\n\n    console.log(result);\n  };\n  return (\n    <div className=\"HomeWrapper\">\n      <form onSubmit={onFormSubmit}>\n        <label>\n          <input\n            // pattern=\"/^(\\d+(\\.\\d+)?)\\s+(\\w+)\\s+in\\s+(\\w+)$/\"\n            pattern=\"^\\d+(\\.\\d+)?\\s+\\w+\\s+in\\s+\\w+$\"\n            type=\"text\"\n            name=\"currency\"\n          />\n        </label>\n        <button disabled={loading} type=\"submit\">\n          {loading ? 'loading...' : 'change'}\n        </button>\n      </form>\n      <p>\n        <b>{result.result}</b>\n      </p>\n    </div>\n  );\n};\nexport default Home;\n\n// const inputString = '15 USD in UAH';\n\n// // Создаем регулярное выражение для извлечения числа и валюты из строки\n// const regex = /^(\\d+(\\.\\d+)?)\\s+(\\w+)\\s+in\\s+(\\w+)$/;\n\n// // Применяем регулярное выражение к исходной строке\n// const matches = inputString.match(regex);\n\n// // Извлекаем нужные данные из массива matches\n// const amount = parseFloat(matches[1]);\n// const from = matches[3];\n// const to = matches[4];\n// function extractCurrencyInfo(inputString) {\n//   const regex = /^(\\d+(\\.\\d+)?)\\s+(\\w+)\\s+in\\s+(\\w+)$/;\n//   const matches = inputString.match(regex);\n\n//   if (!matches) {\n//     throw new Error('Invalid input string format');\n//   }\n\n//   const amount = parseFloat(matches[1]);\n//   const from = matches[3];\n//   const to = matches[4];\n\n//   return { amount, from, to };\n// }\n// const inputString = '15 USD in UAH';\n// const currencyInfo = extractCurrencyInfo(inputString);\n// console.log(currencyInfo.amount); // 15\n// console.log(currencyInfo.from); // USD\n// console.log(currencyInfo.to); // UAH\n// try {\n//   const currencyInfo = extractCurrencyInfo(inputString);\n//   console.log(currencyInfo.amount); // 15\n//   console.log(currencyInfo.from); // USD\n//   console.log(currencyInfo.to); // UAH\n// } catch (err) {\n//   console.error(err);\n// }\n"],"names":["myHeaders","Headers","append","requestOptions","method","redirect","headers","useState","loading","setLoading","result","setResult","className","onSubmit","e","preventDefault","amount","from","to","data","target","elements","currency","value","split","console","log","fetch","then","response","json","catch","error","finally","pattern","type","name","disabled"],"sourceRoot":""}